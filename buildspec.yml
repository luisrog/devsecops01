version: 0.2
env:
  secrets-manager:
    SONAR_TOKEN: dev/codebuild/sonarqube/credentials:tokenForSonar
    SNYK_TOKEN: dev/codebuild/snyk/credentials:tokenForSnyk  
phases:
  install:
    runtime-versions:
      java: latest
      nodejs: latest  # Snyk requiere Node.js
    commands:
      - echo "Installing dependencies..."
      - yum install -y jq wget tar unzip
      - echo "Installing Snyk..."
      - npm install -g snyk
  build:
    commands:
      - echo "Running SonarQube Analysis"
      - mvn clean verify sonar:sonar -Dsonar.projectKey=devsecops01 -Dsonar.host.url=http://3.139.145.182:9000 -Dsonar.login=$SONAR_TOKEN
      - sleep 10  # Da tiempo a SonarQube para procesar el análisis
      - echo "Checking SonarQube Quality Gate Status"
      - |
        quality_status=$(curl -s -u $SONAR_TOKEN: "http://3.139.145.182:9000/api/qualitygates/project_status?projectKey=devsecops01" | jq -r '.projectStatus.status')
        echo "SonarQube Quality Gate Status: $quality_status"
        if [[ "$quality_status" == "ERROR" ]]; then
          echo "❌ Quality Gate failed. Stopping build..."
          exit 1
        fi
      - echo "✅ Quality Gate passed. Build successful."
      
      - echo "Running Snyk security scan..."
      - snyk auth $SNYK_TOKEN
      - snyk test || true

      - echo "Running OWASP ZAP security scan..."
      - |
        wget https://github.com/zaproxy/zaproxy/releases/download/v2.14.0/ZAP_2.14.0_Linux.tar.gz -O zap.tar.gz
        tar -xvf zap.tar.gz
        mv ZAP_2.14.0 zap
        chmod +x zap/zap.sh
        zap/zap.sh -cmd -quickurl https://www.example.com -quickprogress -quickout zap_report.html 

      - echo "Checking ZAP results for vulnerabilities..."
      - |
        if grep -q "FAIL-NEW" zap_report.html; then
          echo "❌ OWASP ZAP found vulnerabilities. Stopping build..."
          exit 1
        fi
      - echo "✅ OWASP ZAP scan passed successfully."
artifacts:
  files:
    - zap_report.html

